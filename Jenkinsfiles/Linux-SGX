pipeline {
        agent {
            dockerfile { filename 'Jenkinsfiles/ubuntu-16.04.dockerfile'
 	                 label 'sgx_slave'
 		         args "-v /lib/modules:/lib/modules:ro -v /usr/src:/usr/src:ro"
	    	       }	    
        }
        stages {
                stage('Build') {
                    steps {
		    	sh '''
			   ls -lR /lib/modules/
			   uname -a
			'''
                        sh '''
                            cd Pal/src/host/Linux-SGX/signer/ && openssl genrsa -3 -out enclave-key.pem 3072
   			    id
                        '''
                        sh '''
			   cd /opt/intel
			   git clone https://github.com/01org/linux-sgx-driver.git
			   cd linux-sgx-driver
			   ISGX_DRIVER_PATH=/opt/intel/linux-sgx-driver ISGX_DRIVER_VERSION=1.9 make
                        '''			
                        sh '''			    
                            cd Pal/src/host/Linux-SGX/sgx-driver && make
                        '''
                        sh '''			    			    
			    make SGX=1
                        '''
                        sh '''			    			    
			    make SGX_RUN=1
                        '''			    
                    }
                }
                stage('Test') {
                    steps {
                        sh '''
                            cd LibOS/shim/test/apps/python
                            ls
                            make SGX=1
                            make SGX_RUN=1
                            ls
                            ./python.manifest scripts/helloworld.py
                            ./python.manifest scripts/fibonacci.py
                        '''
                    }
                }
                stage('Deploy') {
                    steps {
                        sh 'echo Deploying code'
                    }
                }
        }
        post {
                success {
                        echo 'Deployment successful'
                }
                failure {
                        echo 'Failure while on the pipeline'
                }
                unstable {
                        echo 'Pipeline marked as "unstable"'
                }
        }
}
